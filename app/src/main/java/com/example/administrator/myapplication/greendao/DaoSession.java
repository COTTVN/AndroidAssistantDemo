package com.example.administrator.myapplication.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import net.java.entity.dayStep;
import net.java.entity.SportInfo;
import net.java.entity.Father;
import net.java.entity.Son;

import com.example.administrator.myapplication.greendao.dayStepDao;
import com.example.administrator.myapplication.greendao.SportInfoDao;
import com.example.administrator.myapplication.greendao.FatherDao;
import com.example.administrator.myapplication.greendao.SonDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dayStepDaoConfig;
    private final DaoConfig sportInfoDaoConfig;
    private final DaoConfig fatherDaoConfig;
    private final DaoConfig sonDaoConfig;

    private final dayStepDao dayStepDao;
    private final SportInfoDao sportInfoDao;
    private final FatherDao fatherDao;
    private final SonDao sonDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dayStepDaoConfig = daoConfigMap.get(dayStepDao.class).clone();
        dayStepDaoConfig.initIdentityScope(type);

        sportInfoDaoConfig = daoConfigMap.get(SportInfoDao.class).clone();
        sportInfoDaoConfig.initIdentityScope(type);

        fatherDaoConfig = daoConfigMap.get(FatherDao.class).clone();
        fatherDaoConfig.initIdentityScope(type);

        sonDaoConfig = daoConfigMap.get(SonDao.class).clone();
        sonDaoConfig.initIdentityScope(type);

        dayStepDao = new dayStepDao(dayStepDaoConfig, this);
        sportInfoDao = new SportInfoDao(sportInfoDaoConfig, this);
        fatherDao = new FatherDao(fatherDaoConfig, this);
        sonDao = new SonDao(sonDaoConfig, this);

        registerDao(dayStep.class, dayStepDao);
        registerDao(SportInfo.class, sportInfoDao);
        registerDao(Father.class, fatherDao);
        registerDao(Son.class, sonDao);
    }
    
    public void clear() {
        dayStepDaoConfig.clearIdentityScope();
        sportInfoDaoConfig.clearIdentityScope();
        fatherDaoConfig.clearIdentityScope();
        sonDaoConfig.clearIdentityScope();
    }

    public dayStepDao getDayStepDao() {
        return dayStepDao;
    }

    public SportInfoDao getSportInfoDao() {
        return sportInfoDao;
    }

    public FatherDao getFatherDao() {
        return fatherDao;
    }

    public SonDao getSonDao() {
        return sonDao;
    }

}
